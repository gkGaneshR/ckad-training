############################ # ############################
## Bitnami K8S training
## session01/exercise03
#
## Author: Antonio Gamez-Diaz
## Contact: antoniogamez@us.es
#
# File: wordpress deployment creation
# Purpose: defines the pods, replicas, liveness and readiness probes for wordpress
############################ # ############################
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: wordpress-deploy
  namespace: s02-exercise-03
  labels:
    app: wordpress
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      initContainers:
        - name: mariadb-entrypoint
          image: busybox
          volumeMounts:
          - name: wordpress-bitnami-shared
            mountPath: /bitnami
          command:  # The folder `/bitnami/` needs an empty file called `/bitnami/.troll`. 
            - sh
            - '-c'
            - touch /bitnami/.troll
      containers:
      - name: wordpress
        image: javsalgar/wordpress:faulty # the best image in all over the world
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https
          containerPort: 443
          protocol: TCP
        resources: {}
        env:
        - name: MARIADB_HOST
          valueFrom:
            configMapKeyRef:
              name: wordpress-cm
              key: MARIADB_HOST
        - name: MARIADB_PORT_NUMBER
          valueFrom:
            configMapKeyRef:
              name: wordpress-cm
              key: MARIADB_PORT_NUMBER
        - name: WORDPRESS_DATABASE_USER
          valueFrom:
            secretKeyRef: # from secret
              name: wordpress-secret
              key: WORDPRESS_DATABASE_USER
        - name: WORDPRESS_DATABASE_NAME
          valueFrom:
            secretKeyRef: # from secret
              name: wordpress-secret
              key: WORDPRESS_DATABASE_NAME
        - name: WORDPRESS_BLOG_NAME
          valueFrom:
            configMapKeyRef:
              name: wordpress-cm
              key: WORDPRESS_BLOG_NAME
        - name: WORDPRESS_USERNAME
          valueFrom:
            secretKeyRef: # from secret
              name: wordpress-secret
              key: WORDPRESS_USERNAME
        - name: WORDPRESS_EMAIL
          valueFrom:
            configMapKeyRef:
              name: wordpress-cm
              key: WORDPRESS_EMAIL
        - name: WORDPRESS_FIRST_NAME
          valueFrom:
            configMapKeyRef:
              name: wordpress-cm
              key: WORDPRESS_FIRST_NAME
        - name: WORDPRESS_LAST_NAME
          valueFrom:
            configMapKeyRef:
              name: wordpress-cm
              key: WORDPRESS_LAST_NAME
        - name: WORDPRESS_PASSWORD
          valueFrom:
            secretKeyRef: # from secret
              name: wordpress-secret
              key: WORDPRESS_PASSWORD
        - name: WORDPRESS_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef: # from secret
              name: wordpress-secret
              key: WORDPRESS_DATABASE_PASSWORD
        livenessProbe:
          httpGet:
            path: "/wp-login.php"
            port: 80
            scheme: HTTP
          initialDelaySeconds: 120
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: "/wp-login.php"
            port: 80
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - mountPath: /bitnami/apache
          name: wordpress-data
          subPath: apache
        - mountPath: /bitnami/wordpress
          name: wordpress-data
          subPath: wordpress
        - mountPath: /bitnami/php
          name: wordpress-data
          subPath: php
        - mountPath: /bitnami/wordpress/wp-content
          name: wordpress-backupper-shared
          subPath: wp-content
      # Sidecar socat adapter
      - name: wordpress-socat
        image: bitnami/minideb
        command: 
        - sh
        - -c
        - socat tcp-l:3306,fork,reuseaddr tcp:mariadb:3306 # listen localhost:3306, forward to mariadb:3306
      # Sidecar backupper
      - name: wordpress-backupper
        image: sburnicki/debian-ssh-rsync-curl
        volumeMounts:
        - name: wordpress-backupper-data
          mountPath: /wordpress-backupper-data
          subPath: wordpress-backupper-data
        - name: wordpress-backupper-shared
          mountPath: /wp-content
          subPath: wp-content
        command: 
        - sh
        - -c
        - |
          URL_CHECK='http://wordpress/wp-login.php';
          CHECK_INTERVAL='10m';
          i=0;
          while true; do
              echo "Checking WordPress state before performing backup of wp-content folder...";
              echo "Using '$URL_CHECK' endpoint. Waiting '$CHECK_INTERVAL'. Iteration: $i";
              if curl --fail -insecure -XGET -m10 $URL_CHECK &>/dev/null; then
                  echo "The service is ready";
                  echo "---------"

                  echo "du -sh /wordpress-backupper-dat";
                  du -sh /wordpress-backupper-data;
                  echo "---------"

                  echo "du -sh /wp-content";
                  du -sh /wp-content
                  echo "---------"
                  
                  if rsync -av /wp-content /wordpress-backupper-data &>/dev/null; then
                      echo "Transfer OK";
                      echo "#############################################################";
                  else
                      echo "Transfer not OK";
                      echo "#############################################################";
                  fi
              else
                  echo "The service is not ready yet"
                  echo "#############################################################";
              fi;
              i=$(( $i + 1 ))
              sleep $CHECK_INTERVAL;
          done;
      volumes:
        - name: wordpress-data
          persistentVolumeClaim:
            claimName: wordpress-pvc
        - name: wordpress-backupper-data
          persistentVolumeClaim:
            claimName: wordpress-backupper-pvc
        - name: wordpress-backupper-shared
          emptyDir: {}